"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Route_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Core/Route"));
Route_1.default.group(() => {
    Route_1.default.post('address/:type', 'AddressesController.create');
    Route_1.default.get('addresses', 'AddressesController.index');
    Route_1.default.get('address/:type', 'AddressesController.getById');
    Route_1.default.delete('address/:type', 'AddressesController.delete');
    Route_1.default.put('address/:type', 'AddressesController.update');
}).middleware('auth');
Route_1.default.group(() => {
    Route_1.default.post('creditCard', 'CreditCardsController.create');
    Route_1.default.get('creditCards', 'CreditCardsController.index');
    Route_1.default.get('creditCard', 'CreditCardsController.getById');
    Route_1.default.delete('creditCard', 'CreditCardsController.delete');
    Route_1.default.put('creditCard', 'CreditCardsController.update');
}).middleware('auth');
Route_1.default.group(() => {
    Route_1.default.get('user', 'UserController.index');
    Route_1.default.get('user/:id', 'UserController.getById');
    Route_1.default.delete('user/:id', 'UserController.delete');
    Route_1.default.put('user/:id', 'UserController.update');
    Route_1.default.put('user/support/:id', 'UserController.updateSponsor');
}).middleware('auth');
Route_1.default.group(() => {
    Route_1.default.post('user/client', 'UserController.createClient');
    Route_1.default.get('restorers', 'RestorersController.index');
    Route_1.default.post('user/delivery', 'UserController.createDelivery');
    Route_1.default.post('user/restorer', 'UserController.createRestorer');
});
Route_1.default.group(() => {
    Route_1.default.post('restorer', 'RestorersController.createClient');
    Route_1.default.get('restorer', 'RestorersController.getById');
    Route_1.default.delete('restorer', 'RestorersController.delete');
    Route_1.default.put('restorer', 'RestorersController.update');
}).middleware('auth');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsb0ZBQTBDO0FBTTFDLGVBQUssQ0FBQyxLQUFLLENBQUMsR0FBRSxFQUFFO0lBQ1osZUFBSyxDQUFDLElBQUksQ0FBQyxlQUFlLEVBQUUsNEJBQTRCLENBQUMsQ0FBQTtJQUN6RCxlQUFLLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBQywyQkFBMkIsQ0FBQyxDQUFBO0lBQ2xELGVBQUssQ0FBQyxHQUFHLENBQUMsZUFBZSxFQUFFLDZCQUE2QixDQUFDLENBQUE7SUFDekQsZUFBSyxDQUFDLE1BQU0sQ0FBQyxlQUFlLEVBQUMsNEJBQTRCLENBQUMsQ0FBQTtJQUMxRCxlQUFLLENBQUMsR0FBRyxDQUFDLGVBQWUsRUFBQyw0QkFBNEIsQ0FBQyxDQUFBO0FBQzNELENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQTtBQUtyQixlQUFLLENBQUMsS0FBSyxDQUFDLEdBQUUsRUFBRTtJQUNaLGVBQUssQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLDhCQUE4QixDQUFDLENBQUE7SUFDeEQsZUFBSyxDQUFDLEdBQUcsQ0FBQyxhQUFhLEVBQUMsNkJBQTZCLENBQUMsQ0FBQTtJQUN0RCxlQUFLLENBQUMsR0FBRyxDQUFDLFlBQVksRUFBRSwrQkFBK0IsQ0FBQyxDQUFBO0lBQ3hELGVBQUssQ0FBQyxNQUFNLENBQUMsWUFBWSxFQUFDLDhCQUE4QixDQUFDLENBQUE7SUFDekQsZUFBSyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUMsOEJBQThCLENBQUMsQ0FBQTtBQUMxRCxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUE7QUFHckIsZUFBSyxDQUFDLEtBQUssQ0FBQyxHQUFFLEVBQUU7SUFDWixlQUFLLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBQyxzQkFBc0IsQ0FBQyxDQUFBO0lBQ3hDLGVBQUssQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLHdCQUF3QixDQUFDLENBQUE7SUFDL0MsZUFBSyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUMsdUJBQXVCLENBQUMsQ0FBQTtJQUNoRCxlQUFLLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBQyx1QkFBdUIsQ0FBQyxDQUFBO0lBQzdDLGVBQUssQ0FBQyxHQUFHLENBQUMsa0JBQWtCLEVBQUMsOEJBQThCLENBQUMsQ0FBQTtBQUNoRSxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUE7QUFFckIsZUFBSyxDQUFDLEtBQUssQ0FBQyxHQUFFLEVBQUU7SUFDWixlQUFLLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSw2QkFBNkIsQ0FBQyxDQUFBO0lBQ3hELGVBQUssQ0FBQyxHQUFHLENBQUMsV0FBVyxFQUFDLDJCQUEyQixDQUFDLENBQUE7SUFDbEQsZUFBSyxDQUFDLElBQUksQ0FBQyxlQUFlLEVBQUUsK0JBQStCLENBQUMsQ0FBQTtJQUM1RCxlQUFLLENBQUMsSUFBSSxDQUFDLGVBQWUsRUFBRSwrQkFBK0IsQ0FBQyxDQUFBO0FBQ2hFLENBQUMsQ0FBQyxDQUFBO0FBSUYsZUFBSyxDQUFDLEtBQUssQ0FBQyxHQUFFLEVBQUU7SUFDWixlQUFLLENBQUMsSUFBSSxDQUFDLFVBQVUsRUFBRSxrQ0FBa0MsQ0FBQyxDQUFBO0lBQzFELGVBQUssQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFFLDZCQUE2QixDQUFDLENBQUE7SUFDcEQsZUFBSyxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUMsNEJBQTRCLENBQUMsQ0FBQTtJQUNyRCxlQUFLLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBQyw0QkFBNEIsQ0FBQyxDQUFBO0FBQ3RELENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSb3V0ZSBmcm9tICdAaW9jOkFkb25pcy9Db3JlL1JvdXRlJ1xuaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nXG5pbXBvcnQgeyBIdHRwQ29udGV4dENvbnRyYWN0IH0gZnJvbSAnQGlvYzpBZG9uaXMvQ29yZS9IdHRwQ29udGV4dCdcblxuXG4vKiBHcm91cGUgZGUgcm91dGUgcG91ciBsYSBtYW5pcHVsYXRpb24gZGVzIGFkcmVzc2VzICovXG5Sb3V0ZS5ncm91cCgoKT0+e1xuICAgIFJvdXRlLnBvc3QoJ2FkZHJlc3MvOnR5cGUnLCAnQWRkcmVzc2VzQ29udHJvbGxlci5jcmVhdGUnKVxuICAgIFJvdXRlLmdldCgnYWRkcmVzc2VzJywnQWRkcmVzc2VzQ29udHJvbGxlci5pbmRleCcpXG4gICAgUm91dGUuZ2V0KCdhZGRyZXNzLzp0eXBlJywgJ0FkZHJlc3Nlc0NvbnRyb2xsZXIuZ2V0QnlJZCcpXG4gICAgUm91dGUuZGVsZXRlKCdhZGRyZXNzLzp0eXBlJywnQWRkcmVzc2VzQ29udHJvbGxlci5kZWxldGUnKVxuICAgIFJvdXRlLnB1dCgnYWRkcmVzcy86dHlwZScsJ0FkZHJlc3Nlc0NvbnRyb2xsZXIudXBkYXRlJylcbn0pLm1pZGRsZXdhcmUoJ2F1dGgnKVxuXG5cblxuLyogR3JvdXBlIGRlIHJvdXRlIHBvdXIgbGEgbWFuaXB1bGF0aW9uIGRlcyBtb3llbnMgZGUgcGFpZW1lbnRzICovXG5Sb3V0ZS5ncm91cCgoKT0+e1xuICAgIFJvdXRlLnBvc3QoJ2NyZWRpdENhcmQnLCAnQ3JlZGl0Q2FyZHNDb250cm9sbGVyLmNyZWF0ZScpXG4gICAgUm91dGUuZ2V0KCdjcmVkaXRDYXJkcycsJ0NyZWRpdENhcmRzQ29udHJvbGxlci5pbmRleCcpXG4gICAgUm91dGUuZ2V0KCdjcmVkaXRDYXJkJywgJ0NyZWRpdENhcmRzQ29udHJvbGxlci5nZXRCeUlkJylcbiAgICBSb3V0ZS5kZWxldGUoJ2NyZWRpdENhcmQnLCdDcmVkaXRDYXJkc0NvbnRyb2xsZXIuZGVsZXRlJylcbiAgICBSb3V0ZS5wdXQoJ2NyZWRpdENhcmQnLCdDcmVkaXRDYXJkc0NvbnRyb2xsZXIudXBkYXRlJylcbn0pLm1pZGRsZXdhcmUoJ2F1dGgnKVxuXG4vKiBHcm91cGUgZGUgcm91dGUgcG91ciBsYSBtYW5pcHVsYXRpb24gZGVzIHV0aWxpc2F0ZXVycyAqL1xuUm91dGUuZ3JvdXAoKCk9PntcbiAgICBSb3V0ZS5nZXQoJ3VzZXInLCdVc2VyQ29udHJvbGxlci5pbmRleCcpXG4gICAgUm91dGUuZ2V0KCd1c2VyLzppZCcsICdVc2VyQ29udHJvbGxlci5nZXRCeUlkJylcbiAgICBSb3V0ZS5kZWxldGUoJ3VzZXIvOmlkJywnVXNlckNvbnRyb2xsZXIuZGVsZXRlJylcbiAgICBSb3V0ZS5wdXQoJ3VzZXIvOmlkJywnVXNlckNvbnRyb2xsZXIudXBkYXRlJylcbiAgICBSb3V0ZS5wdXQoJ3VzZXIvc3VwcG9ydC86aWQnLCdVc2VyQ29udHJvbGxlci51cGRhdGVTcG9uc29yJylcbn0pLm1pZGRsZXdhcmUoJ2F1dGgnKVxuXG5Sb3V0ZS5ncm91cCgoKT0+e1xuICAgIFJvdXRlLnBvc3QoJ3VzZXIvY2xpZW50JywgJ1VzZXJDb250cm9sbGVyLmNyZWF0ZUNsaWVudCcpXG4gICAgUm91dGUuZ2V0KCdyZXN0b3JlcnMnLCdSZXN0b3JlcnNDb250cm9sbGVyLmluZGV4JylcbiAgICBSb3V0ZS5wb3N0KCd1c2VyL2RlbGl2ZXJ5JywgJ1VzZXJDb250cm9sbGVyLmNyZWF0ZURlbGl2ZXJ5JylcbiAgICBSb3V0ZS5wb3N0KCd1c2VyL3Jlc3RvcmVyJywgJ1VzZXJDb250cm9sbGVyLmNyZWF0ZVJlc3RvcmVyJylcbn0pXG5cblxuLyogR3JvdXBlIGRlIHJvdXRlIHBvdXIgbGEgbWFuaXB1bGF0aW9uIGRlcyByZXN0b3JlciAqL1xuUm91dGUuZ3JvdXAoKCk9PntcbiAgICBSb3V0ZS5wb3N0KCdyZXN0b3JlcicsICdSZXN0b3JlcnNDb250cm9sbGVyLmNyZWF0ZUNsaWVudCcpXG4gICAgUm91dGUuZ2V0KCdyZXN0b3JlcicsICdSZXN0b3JlcnNDb250cm9sbGVyLmdldEJ5SWQnKVxuICAgIFJvdXRlLmRlbGV0ZSgncmVzdG9yZXInLCdSZXN0b3JlcnNDb250cm9sbGVyLmRlbGV0ZScpXG4gICAgUm91dGUucHV0KCdyZXN0b3JlcicsJ1Jlc3RvcmVyc0NvbnRyb2xsZXIudXBkYXRlJylcbn0pLm1pZGRsZXdhcmUoJ2F1dGgnKVxuXG5cblxuXG5cbi8qUm91dGUuZ2V0KCd0ZXN0JywgKCk9PntcbiAgICByZXR1cm4gJ1BBR0UgREUgVEVTVCdcbn0pXG5cblJvdXRlLnBvc3QoJ3NpZ251cCcsICdVc2VyQ29udHJvbGxlci5jcmVhdGUnKVxuXG5Sb3V0ZS5wb3N0KCdsb2dpbicsJ0F1dGhDb250cm9sbGVyLmxvZ2luJylcblxuUm91dGUuZ2V0KCdyZWZyZXNoX3Rva2VuJywgJ0F1dGhDb250cm9sbGVyLnJlZnJlc2hfdG9rZW4nKVxuXG5Sb3V0ZS5nZXQoJ2NoZWNrJywgJ0F1dGhDb250cm9sbGVyLmNoZWNrJykqLyJdfQ==
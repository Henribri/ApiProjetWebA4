"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Route_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Core/Route"));
Route_1.default.group(() => {
    Route_1.default.post('address/:type', 'AddressesController.create');
    Route_1.default.get('addresses', 'AddressesController.index');
    Route_1.default.get('address/:type', 'AddressesController.getById');
    Route_1.default.delete('address/:type', 'AddressesController.delete');
    Route_1.default.put('address/:type', 'AddressesController.update');
});
Route_1.default.group(() => {
    Route_1.default.post('creditCard', 'CreditCardsController.create');
    Route_1.default.get('creditCards', 'CreditCardsController.index');
    Route_1.default.get('creditCard', 'CreditCardsController.getById');
    Route_1.default.delete('creditCard', 'CreditCardsController.delete');
    Route_1.default.put('creditCard', 'CreditCardsController.update');
}).middleware('auth');
Route_1.default.group(() => {
    Route_1.default.get('user', 'UserController.index');
    Route_1.default.get('user/:id', 'UserController.getById');
    Route_1.default.delete('user/:id', 'UserController.delete');
    Route_1.default.put('user/:id', 'UserController.update');
    Route_1.default.put('user/support/:id', 'UserController.updateSponsor');
}).middleware('auth');
Route_1.default.group(() => {
    Route_1.default.post('user/client', 'UserController.createClient');
    Route_1.default.post('user/delivery', 'UserController.createDelivery');
    Route_1.default.post('user/restorer', 'UserController.createRestorer');
});
Route_1.default.group(() => {
    Route_1.default.post('restorer', 'RestorersController.createClient');
    Route_1.default.get('restorers', 'RestorersController.index');
    Route_1.default.get('restorer', 'RestorersController.getById');
    Route_1.default.delete('restorer', 'RestorersController.delete');
    Route_1.default.put('restorer', 'RestorersController.update');
}).middleware('auth');
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsb0ZBQTBDO0FBTTFDLGVBQUssQ0FBQyxLQUFLLENBQUMsR0FBRSxFQUFFO0lBQ1osZUFBSyxDQUFDLElBQUksQ0FBQyxlQUFlLEVBQUUsNEJBQTRCLENBQUMsQ0FBQTtJQUN6RCxlQUFLLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBQywyQkFBMkIsQ0FBQyxDQUFBO0lBQ2xELGVBQUssQ0FBQyxHQUFHLENBQUMsZUFBZSxFQUFFLDZCQUE2QixDQUFDLENBQUE7SUFDekQsZUFBSyxDQUFDLE1BQU0sQ0FBQyxlQUFlLEVBQUMsNEJBQTRCLENBQUMsQ0FBQTtJQUMxRCxlQUFLLENBQUMsR0FBRyxDQUFDLGVBQWUsRUFBQyw0QkFBNEIsQ0FBQyxDQUFBO0FBQzNELENBQUMsQ0FBQyxDQUFBO0FBS0YsZUFBSyxDQUFDLEtBQUssQ0FBQyxHQUFFLEVBQUU7SUFDWixlQUFLLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSw4QkFBOEIsQ0FBQyxDQUFBO0lBQ3hELGVBQUssQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFDLDZCQUE2QixDQUFDLENBQUE7SUFDdEQsZUFBSyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsK0JBQStCLENBQUMsQ0FBQTtJQUN4RCxlQUFLLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBQyw4QkFBOEIsQ0FBQyxDQUFBO0lBQ3pELGVBQUssQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFDLDhCQUE4QixDQUFDLENBQUE7QUFDMUQsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFBO0FBR3JCLGVBQUssQ0FBQyxLQUFLLENBQUMsR0FBRSxFQUFFO0lBQ1osZUFBSyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUMsc0JBQXNCLENBQUMsQ0FBQTtJQUN4QyxlQUFLLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSx3QkFBd0IsQ0FBQyxDQUFBO0lBQy9DLGVBQUssQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFDLHVCQUF1QixDQUFDLENBQUE7SUFDaEQsZUFBSyxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUMsdUJBQXVCLENBQUMsQ0FBQTtJQUM3QyxlQUFLLENBQUMsR0FBRyxDQUFDLGtCQUFrQixFQUFDLDhCQUE4QixDQUFDLENBQUE7QUFDaEUsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFBO0FBRXJCLGVBQUssQ0FBQyxLQUFLLENBQUMsR0FBRSxFQUFFO0lBQ1osZUFBSyxDQUFDLElBQUksQ0FBQyxhQUFhLEVBQUUsNkJBQTZCLENBQUMsQ0FBQTtJQUN4RCxlQUFLLENBQUMsSUFBSSxDQUFDLGVBQWUsRUFBRSwrQkFBK0IsQ0FBQyxDQUFBO0lBQzVELGVBQUssQ0FBQyxJQUFJLENBQUMsZUFBZSxFQUFFLCtCQUErQixDQUFDLENBQUE7QUFDaEUsQ0FBQyxDQUFDLENBQUE7QUFJRixlQUFLLENBQUMsS0FBSyxDQUFDLEdBQUUsRUFBRTtJQUNaLGVBQUssQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLGtDQUFrQyxDQUFDLENBQUE7SUFDMUQsZUFBSyxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUMsMkJBQTJCLENBQUMsQ0FBQTtJQUNsRCxlQUFLLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSw2QkFBNkIsQ0FBQyxDQUFBO0lBQ3BELGVBQUssQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFDLDRCQUE0QixDQUFDLENBQUE7SUFDckQsZUFBSyxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUMsNEJBQTRCLENBQUMsQ0FBQTtBQUN0RCxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUm91dGUgZnJvbSAnQGlvYzpBZG9uaXMvQ29yZS9Sb3V0ZSdcbmltcG9ydCBqd3QgZnJvbSAnanNvbndlYnRva2VuJ1xuaW1wb3J0IHsgSHR0cENvbnRleHRDb250cmFjdCB9IGZyb20gJ0Bpb2M6QWRvbmlzL0NvcmUvSHR0cENvbnRleHQnXG5cblxuLyogR3JvdXBlIGRlIHJvdXRlIHBvdXIgbGEgbWFuaXB1bGF0aW9uIGRlcyBhZHJlc3NlcyAqL1xuUm91dGUuZ3JvdXAoKCk9PntcbiAgICBSb3V0ZS5wb3N0KCdhZGRyZXNzLzp0eXBlJywgJ0FkZHJlc3Nlc0NvbnRyb2xsZXIuY3JlYXRlJylcbiAgICBSb3V0ZS5nZXQoJ2FkZHJlc3NlcycsJ0FkZHJlc3Nlc0NvbnRyb2xsZXIuaW5kZXgnKVxuICAgIFJvdXRlLmdldCgnYWRkcmVzcy86dHlwZScsICdBZGRyZXNzZXNDb250cm9sbGVyLmdldEJ5SWQnKVxuICAgIFJvdXRlLmRlbGV0ZSgnYWRkcmVzcy86dHlwZScsJ0FkZHJlc3Nlc0NvbnRyb2xsZXIuZGVsZXRlJylcbiAgICBSb3V0ZS5wdXQoJ2FkZHJlc3MvOnR5cGUnLCdBZGRyZXNzZXNDb250cm9sbGVyLnVwZGF0ZScpXG59KVxuXG5cblxuLyogR3JvdXBlIGRlIHJvdXRlIHBvdXIgbGEgbWFuaXB1bGF0aW9uIGRlcyBtb3llbnMgZGUgcGFpZW1lbnRzICovXG5Sb3V0ZS5ncm91cCgoKT0+e1xuICAgIFJvdXRlLnBvc3QoJ2NyZWRpdENhcmQnLCAnQ3JlZGl0Q2FyZHNDb250cm9sbGVyLmNyZWF0ZScpXG4gICAgUm91dGUuZ2V0KCdjcmVkaXRDYXJkcycsJ0NyZWRpdENhcmRzQ29udHJvbGxlci5pbmRleCcpXG4gICAgUm91dGUuZ2V0KCdjcmVkaXRDYXJkJywgJ0NyZWRpdENhcmRzQ29udHJvbGxlci5nZXRCeUlkJylcbiAgICBSb3V0ZS5kZWxldGUoJ2NyZWRpdENhcmQnLCdDcmVkaXRDYXJkc0NvbnRyb2xsZXIuZGVsZXRlJylcbiAgICBSb3V0ZS5wdXQoJ2NyZWRpdENhcmQnLCdDcmVkaXRDYXJkc0NvbnRyb2xsZXIudXBkYXRlJylcbn0pLm1pZGRsZXdhcmUoJ2F1dGgnKVxuXG4vKiBHcm91cGUgZGUgcm91dGUgcG91ciBsYSBtYW5pcHVsYXRpb24gZGVzIHV0aWxpc2F0ZXVycyAqL1xuUm91dGUuZ3JvdXAoKCk9PntcbiAgICBSb3V0ZS5nZXQoJ3VzZXInLCdVc2VyQ29udHJvbGxlci5pbmRleCcpXG4gICAgUm91dGUuZ2V0KCd1c2VyLzppZCcsICdVc2VyQ29udHJvbGxlci5nZXRCeUlkJylcbiAgICBSb3V0ZS5kZWxldGUoJ3VzZXIvOmlkJywnVXNlckNvbnRyb2xsZXIuZGVsZXRlJylcbiAgICBSb3V0ZS5wdXQoJ3VzZXIvOmlkJywnVXNlckNvbnRyb2xsZXIudXBkYXRlJylcbiAgICBSb3V0ZS5wdXQoJ3VzZXIvc3VwcG9ydC86aWQnLCdVc2VyQ29udHJvbGxlci51cGRhdGVTcG9uc29yJylcbn0pLm1pZGRsZXdhcmUoJ2F1dGgnKVxuXG5Sb3V0ZS5ncm91cCgoKT0+e1xuICAgIFJvdXRlLnBvc3QoJ3VzZXIvY2xpZW50JywgJ1VzZXJDb250cm9sbGVyLmNyZWF0ZUNsaWVudCcpXG4gICAgUm91dGUucG9zdCgndXNlci9kZWxpdmVyeScsICdVc2VyQ29udHJvbGxlci5jcmVhdGVEZWxpdmVyeScpXG4gICAgUm91dGUucG9zdCgndXNlci9yZXN0b3JlcicsICdVc2VyQ29udHJvbGxlci5jcmVhdGVSZXN0b3JlcicpXG59KVxuXG5cbi8qIEdyb3VwZSBkZSByb3V0ZSBwb3VyIGxhIG1hbmlwdWxhdGlvbiBkZXMgcmVzdG9yZXIgKi9cblJvdXRlLmdyb3VwKCgpPT57XG4gICAgUm91dGUucG9zdCgncmVzdG9yZXInLCAnUmVzdG9yZXJzQ29udHJvbGxlci5jcmVhdGVDbGllbnQnKVxuICAgIFJvdXRlLmdldCgncmVzdG9yZXJzJywnUmVzdG9yZXJzQ29udHJvbGxlci5pbmRleCcpXG4gICAgUm91dGUuZ2V0KCdyZXN0b3JlcicsICdSZXN0b3JlcnNDb250cm9sbGVyLmdldEJ5SWQnKVxuICAgIFJvdXRlLmRlbGV0ZSgncmVzdG9yZXInLCdSZXN0b3JlcnNDb250cm9sbGVyLmRlbGV0ZScpXG4gICAgUm91dGUucHV0KCdyZXN0b3JlcicsJ1Jlc3RvcmVyc0NvbnRyb2xsZXIudXBkYXRlJylcbn0pLm1pZGRsZXdhcmUoJ2F1dGgnKVxuXG5cblxuXG5cbi8qUm91dGUuZ2V0KCd0ZXN0JywgKCk9PntcbiAgICByZXR1cm4gJ1BBR0UgREUgVEVTVCdcbn0pXG5cblJvdXRlLnBvc3QoJ3NpZ251cCcsICdVc2VyQ29udHJvbGxlci5jcmVhdGUnKVxuXG5Sb3V0ZS5wb3N0KCdsb2dpbicsJ0F1dGhDb250cm9sbGVyLmxvZ2luJylcblxuUm91dGUuZ2V0KCdyZWZyZXNoX3Rva2VuJywgJ0F1dGhDb250cm9sbGVyLnJlZnJlc2hfdG9rZW4nKVxuXG5Sb3V0ZS5nZXQoJ2NoZWNrJywgJ0F1dGhDb250cm9sbGVyLmNoZWNrJykqLyJdfQ==
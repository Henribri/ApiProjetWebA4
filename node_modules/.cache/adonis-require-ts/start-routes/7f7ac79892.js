"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Route_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Core/Route"));
Route_1.default.group(() => {
    Route_1.default.post('address/:type', 'AddressesController.create');
    Route_1.default.get('addresses', 'AddressesController.index');
    Route_1.default.get('address/:type', 'AddressesController.getById');
    Route_1.default.delete('address/:type', 'AddressesController.delete');
    Route_1.default.put('address/:type', 'AddressesController.update');
});
Route_1.default.group(() => {
    Route_1.default.post('creditCard', 'CreditCardsController.create');
    Route_1.default.get('creditCards', 'CreditCardsController.index');
    Route_1.default.get('creditCard', 'CreditCardsController.getById');
    Route_1.default.delete('creditCard', 'CreditCardsController.delete');
    Route_1.default.put('creditCard', 'CreditCardsController.update');
});
Route_1.default.group(() => {
    Route_1.default.post('user/client', 'UserController.createClient');
    Route_1.default.post('user/delivery', 'UserController.createDelivery');
    Route_1.default.post('user/restorer', 'UserController.createRestorer');
    Route_1.default.get('user', 'UserController.index');
    Route_1.default.get('user/:id', 'UserController.getById');
    Route_1.default.delete('user/:id', 'UserController.delete');
    Route_1.default.put('user/:id', 'UserController.update');
});
Route_1.default.group(() => {
    Route_1.default.post('restorer', 'RestorersController.createClient');
    Route_1.default.get('restorers', 'RestorersController.index');
    Route_1.default.get('restorer', 'RestorersController.getById');
    Route_1.default.delete('restorer', 'RestorersController.delete');
    Route_1.default.put('restorer', 'RestorersController.update');
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicm91dGVzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsb0ZBQTBDO0FBTTFDLGVBQUssQ0FBQyxLQUFLLENBQUMsR0FBRSxFQUFFO0lBQ1osZUFBSyxDQUFDLElBQUksQ0FBQyxlQUFlLEVBQUUsNEJBQTRCLENBQUMsQ0FBQTtJQUN6RCxlQUFLLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBQywyQkFBMkIsQ0FBQyxDQUFBO0lBQ2xELGVBQUssQ0FBQyxHQUFHLENBQUMsZUFBZSxFQUFFLDZCQUE2QixDQUFDLENBQUE7SUFDekQsZUFBSyxDQUFDLE1BQU0sQ0FBQyxlQUFlLEVBQUMsNEJBQTRCLENBQUMsQ0FBQTtJQUMxRCxlQUFLLENBQUMsR0FBRyxDQUFDLGVBQWUsRUFBQyw0QkFBNEIsQ0FBQyxDQUFBO0FBQzNELENBQUMsQ0FBQyxDQUFBO0FBS0YsZUFBSyxDQUFDLEtBQUssQ0FBQyxHQUFFLEVBQUU7SUFDWixlQUFLLENBQUMsSUFBSSxDQUFDLFlBQVksRUFBRSw4QkFBOEIsQ0FBQyxDQUFBO0lBQ3hELGVBQUssQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFDLDZCQUE2QixDQUFDLENBQUE7SUFDdEQsZUFBSyxDQUFDLEdBQUcsQ0FBQyxZQUFZLEVBQUUsK0JBQStCLENBQUMsQ0FBQTtJQUN4RCxlQUFLLENBQUMsTUFBTSxDQUFDLFlBQVksRUFBQyw4QkFBOEIsQ0FBQyxDQUFBO0lBQ3pELGVBQUssQ0FBQyxHQUFHLENBQUMsWUFBWSxFQUFDLDhCQUE4QixDQUFDLENBQUE7QUFDMUQsQ0FBQyxDQUFDLENBQUE7QUFHRixlQUFLLENBQUMsS0FBSyxDQUFDLEdBQUUsRUFBRTtJQUNaLGVBQUssQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLDZCQUE2QixDQUFDLENBQUE7SUFDeEQsZUFBSyxDQUFDLElBQUksQ0FBQyxlQUFlLEVBQUUsK0JBQStCLENBQUMsQ0FBQTtJQUM1RCxlQUFLLENBQUMsSUFBSSxDQUFDLGVBQWUsRUFBRSwrQkFBK0IsQ0FBQyxDQUFBO0lBQzVELGVBQUssQ0FBQyxHQUFHLENBQUMsTUFBTSxFQUFDLHNCQUFzQixDQUFDLENBQUE7SUFDeEMsZUFBSyxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUUsd0JBQXdCLENBQUMsQ0FBQTtJQUMvQyxlQUFLLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBQyx1QkFBdUIsQ0FBQyxDQUFBO0lBQ2hELGVBQUssQ0FBQyxHQUFHLENBQUMsVUFBVSxFQUFDLHVCQUF1QixDQUFDLENBQUE7QUFDakQsQ0FBQyxDQUFDLENBQUE7QUFJRixlQUFLLENBQUMsS0FBSyxDQUFDLEdBQUUsRUFBRTtJQUNaLGVBQUssQ0FBQyxJQUFJLENBQUMsVUFBVSxFQUFFLGtDQUFrQyxDQUFDLENBQUE7SUFDMUQsZUFBSyxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUMsMkJBQTJCLENBQUMsQ0FBQTtJQUNsRCxlQUFLLENBQUMsR0FBRyxDQUFDLFVBQVUsRUFBRSw2QkFBNkIsQ0FBQyxDQUFBO0lBQ3BELGVBQUssQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFDLDRCQUE0QixDQUFDLENBQUE7SUFDckQsZUFBSyxDQUFDLEdBQUcsQ0FBQyxVQUFVLEVBQUMsNEJBQTRCLENBQUMsQ0FBQTtBQUN0RCxDQUFDLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSb3V0ZSBmcm9tICdAaW9jOkFkb25pcy9Db3JlL1JvdXRlJ1xuaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nXG5pbXBvcnQgeyBIdHRwQ29udGV4dENvbnRyYWN0IH0gZnJvbSAnQGlvYzpBZG9uaXMvQ29yZS9IdHRwQ29udGV4dCdcblxuXG4vKiBHcm91cGUgZGUgcm91dGUgcG91ciBsYSBtYW5pcHVsYXRpb24gZGVzIGFkcmVzc2VzICovXG5Sb3V0ZS5ncm91cCgoKT0+e1xuICAgIFJvdXRlLnBvc3QoJ2FkZHJlc3MvOnR5cGUnLCAnQWRkcmVzc2VzQ29udHJvbGxlci5jcmVhdGUnKVxuICAgIFJvdXRlLmdldCgnYWRkcmVzc2VzJywnQWRkcmVzc2VzQ29udHJvbGxlci5pbmRleCcpXG4gICAgUm91dGUuZ2V0KCdhZGRyZXNzLzp0eXBlJywgJ0FkZHJlc3Nlc0NvbnRyb2xsZXIuZ2V0QnlJZCcpXG4gICAgUm91dGUuZGVsZXRlKCdhZGRyZXNzLzp0eXBlJywnQWRkcmVzc2VzQ29udHJvbGxlci5kZWxldGUnKVxuICAgIFJvdXRlLnB1dCgnYWRkcmVzcy86dHlwZScsJ0FkZHJlc3Nlc0NvbnRyb2xsZXIudXBkYXRlJylcbn0pXG5cblxuXG4vKiBHcm91cGUgZGUgcm91dGUgcG91ciBsYSBtYW5pcHVsYXRpb24gZGVzIG1veWVucyBkZSBwYWllbWVudHMgKi9cblJvdXRlLmdyb3VwKCgpPT57XG4gICAgUm91dGUucG9zdCgnY3JlZGl0Q2FyZCcsICdDcmVkaXRDYXJkc0NvbnRyb2xsZXIuY3JlYXRlJylcbiAgICBSb3V0ZS5nZXQoJ2NyZWRpdENhcmRzJywnQ3JlZGl0Q2FyZHNDb250cm9sbGVyLmluZGV4JylcbiAgICBSb3V0ZS5nZXQoJ2NyZWRpdENhcmQnLCAnQ3JlZGl0Q2FyZHNDb250cm9sbGVyLmdldEJ5SWQnKVxuICAgIFJvdXRlLmRlbGV0ZSgnY3JlZGl0Q2FyZCcsJ0NyZWRpdENhcmRzQ29udHJvbGxlci5kZWxldGUnKVxuICAgIFJvdXRlLnB1dCgnY3JlZGl0Q2FyZCcsJ0NyZWRpdENhcmRzQ29udHJvbGxlci51cGRhdGUnKVxufSlcblxuLyogR3JvdXBlIGRlIHJvdXRlIHBvdXIgbGEgbWFuaXB1bGF0aW9uIGRlcyB1dGlsaXNhdGV1cnMgKi9cblJvdXRlLmdyb3VwKCgpPT57XG4gICAgUm91dGUucG9zdCgndXNlci9jbGllbnQnLCAnVXNlckNvbnRyb2xsZXIuY3JlYXRlQ2xpZW50JylcbiAgICBSb3V0ZS5wb3N0KCd1c2VyL2RlbGl2ZXJ5JywgJ1VzZXJDb250cm9sbGVyLmNyZWF0ZURlbGl2ZXJ5JylcbiAgICBSb3V0ZS5wb3N0KCd1c2VyL3Jlc3RvcmVyJywgJ1VzZXJDb250cm9sbGVyLmNyZWF0ZVJlc3RvcmVyJylcbiAgICBSb3V0ZS5nZXQoJ3VzZXInLCdVc2VyQ29udHJvbGxlci5pbmRleCcpXG4gICAgUm91dGUuZ2V0KCd1c2VyLzppZCcsICdVc2VyQ29udHJvbGxlci5nZXRCeUlkJylcbiAgICBSb3V0ZS5kZWxldGUoJ3VzZXIvOmlkJywnVXNlckNvbnRyb2xsZXIuZGVsZXRlJylcbiAgICBSb3V0ZS5wdXQoJ3VzZXIvOmlkJywnVXNlckNvbnRyb2xsZXIudXBkYXRlJylcbn0pXG5cblxuLyogR3JvdXBlIGRlIHJvdXRlIHBvdXIgbGEgbWFuaXB1bGF0aW9uIGRlcyByZXN0b3JlciAqL1xuUm91dGUuZ3JvdXAoKCk9PntcbiAgICBSb3V0ZS5wb3N0KCdyZXN0b3JlcicsICdSZXN0b3JlcnNDb250cm9sbGVyLmNyZWF0ZUNsaWVudCcpXG4gICAgUm91dGUuZ2V0KCdyZXN0b3JlcnMnLCdSZXN0b3JlcnNDb250cm9sbGVyLmluZGV4JylcbiAgICBSb3V0ZS5nZXQoJ3Jlc3RvcmVyJywgJ1Jlc3RvcmVyc0NvbnRyb2xsZXIuZ2V0QnlJZCcpXG4gICAgUm91dGUuZGVsZXRlKCdyZXN0b3JlcicsJ1Jlc3RvcmVyc0NvbnRyb2xsZXIuZGVsZXRlJylcbiAgICBSb3V0ZS5wdXQoJ3Jlc3RvcmVyJywnUmVzdG9yZXJzQ29udHJvbGxlci51cGRhdGUnKVxufSlcblxuXG5cblxuXG4vKlJvdXRlLmdldCgndGVzdCcsICgpPT57XG4gICAgcmV0dXJuICdQQUdFIERFIFRFU1QnXG59KVxuXG5Sb3V0ZS5wb3N0KCdzaWdudXAnLCAnVXNlckNvbnRyb2xsZXIuY3JlYXRlJylcblxuUm91dGUucG9zdCgnbG9naW4nLCdBdXRoQ29udHJvbGxlci5sb2dpbicpXG5cblJvdXRlLmdldCgncmVmcmVzaF90b2tlbicsICdBdXRoQ29udHJvbGxlci5yZWZyZXNoX3Rva2VuJylcblxuUm91dGUuZ2V0KCdjaGVjaycsICdBdXRoQ29udHJvbGxlci5jaGVjaycpKi8iXX0=
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsonwebtoken_1 = __importDefault(require("jsonwebtoken"));
class AuthController {
    async login({ auth, request, response }) {
        const email = request.input('email');
        const password = request.input('password');
        try {
            const token = jsonwebtoken_1.default.sign({
                data: 'foobar'
            }, 'TOKEN_PRIVATE_KEY', { expiresIn: '30m' });
            const refresh_token = await auth.use('api').attempt(email, password, {
                expiresIn: '1days'
            });
            return { token, refresh_token };
        }
        catch {
            return response.badRequest('Invalid credentials');
        }
    }
    async refresh_token({ auth, response }) {
        try {
            const refreshToken = await auth.use('api').authenticate();
            if (refreshToken)
                return jsonwebtoken_1.default.sign({ data: 'foobar' }, 'TOKEN_PRIVATE_KEY', { expiresIn: '30m' });
        }
        catch {
            return response.badRequest('Invalid credentials');
        }
    }
    async check({ request }) {
        return jsonwebtoken_1.default.verify(request.input('jwt'), 'TOKEN_PRIVATE_KEY');
    }
}
exports.default = AuthController;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXV0aENvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJBdXRoQ29udHJvbGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLGdFQUE4QjtBQUU5QixNQUFxQixjQUFjO0lBQ3hCLEtBQUssQ0FBQyxLQUFLLENBQUMsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLFFBQVEsRUFBRTtRQUkxQyxNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFBO1FBQ3BDLE1BQU0sUUFBUSxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLENBQUE7UUFDMUMsSUFBSTtZQUdBLE1BQU0sS0FBSyxHQUFJLHNCQUFHLENBQUMsSUFBSSxDQUFDO2dCQUN4QixJQUFJLEVBQUUsUUFBUTthQUNiLEVBQUUsbUJBQW1CLEVBQUUsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztZQUc5QyxNQUFNLGFBQWEsR0FBRyxNQUFNLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsT0FBTyxDQUFDLEtBQUssRUFBRSxRQUFRLEVBQUU7Z0JBQ3JFLFNBQVMsRUFBQyxPQUFPO2FBQ2hCLENBQUMsQ0FBQTtZQUdGLE9BQU8sRUFBQyxLQUFLLEVBQUUsYUFBYSxFQUFDLENBQUE7U0FFaEM7UUFBQyxNQUFNO1lBQ0osT0FBTyxRQUFRLENBQUMsVUFBVSxDQUFDLHFCQUFxQixDQUFDLENBQUE7U0FDcEQ7SUFDTCxDQUFDO0lBRU0sS0FBSyxDQUFDLGFBQWEsQ0FBQyxFQUFDLElBQUksRUFBQyxRQUFRLEVBQUM7UUFDdEMsSUFBSTtZQUVGLE1BQU0sWUFBWSxHQUFHLE1BQU0sSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxZQUFZLEVBQUUsQ0FBQTtZQUV6RCxJQUFJLFlBQVk7Z0JBQUUsT0FBTyxzQkFBRyxDQUFDLElBQUksQ0FBQyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsRUFBRSxtQkFBbUIsRUFBRSxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsQ0FBQyxDQUFDO1NBRWxHO1FBQUEsTUFBSztZQUNKLE9BQU8sUUFBUSxDQUFDLFVBQVUsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFBO1NBQ2xEO0lBQ0gsQ0FBQztJQUdJLEtBQUssQ0FBQyxLQUFLLENBQUMsRUFBQyxPQUFPLEVBQUM7UUFDeEIsT0FBTyxzQkFBRyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxFQUFFLG1CQUFtQixDQUFDLENBQUM7SUFDakUsQ0FBQztDQUNKO0FBM0NELGlDQTJDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBqd3QgZnJvbSAnanNvbndlYnRva2VuJ1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBdXRoQ29udHJvbGxlciB7XG4gICAgcHVibGljIGFzeW5jIGxvZ2luKHsgYXV0aCwgcmVxdWVzdCwgcmVzcG9uc2UgfSl7XG5cbiAgICAgICAgLy8gR2V0IHRoZSBwYXJhbSBvZiB1c2VyIGluIHRoZSByZXF1ZXN0XG5cbiAgICAgICAgY29uc3QgZW1haWwgPSByZXF1ZXN0LmlucHV0KCdlbWFpbCcpXG4gICAgICAgIGNvbnN0IHBhc3N3b3JkID0gcmVxdWVzdC5pbnB1dCgncGFzc3dvcmQnKVxuICAgICAgICB0cnkge1xuXG4gICAgICAgICAgICAvLyBHZW5lcmF0ZSB0b2tlblxuICAgICAgICAgICAgY29uc3QgdG9rZW4gPSAgand0LnNpZ24oe1xuICAgICAgICAgICAgZGF0YTogJ2Zvb2JhcidcbiAgICAgICAgICAgIH0sICdUT0tFTl9QUklWQVRFX0tFWScsIHsgZXhwaXJlc0luOiAnMzBtJyB9KTtcblxuICAgICAgICAgICAgLy8gR2VuZXJhdGUgcmVmcmVzaCB0b2tlblxuICAgICAgICAgICAgY29uc3QgcmVmcmVzaF90b2tlbiA9IGF3YWl0IGF1dGgudXNlKCdhcGknKS5hdHRlbXB0KGVtYWlsLCBwYXNzd29yZCwge1xuICAgICAgICAgICAgZXhwaXJlc0luOicxZGF5cydcbiAgICAgICAgICAgIH0pXG5cbiAgICAgICAgICAgIC8vIEdpdmUgdGhlIHRva2VuIHRvIHRoZSBjbGllbnRcbiAgICAgICAgICAgIHJldHVybiB7dG9rZW4sIHJlZnJlc2hfdG9rZW59XG5cbiAgICAgICAgfSBjYXRjaCB7XG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuYmFkUmVxdWVzdCgnSW52YWxpZCBjcmVkZW50aWFscycpXG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBwdWJsaWMgYXN5bmMgcmVmcmVzaF90b2tlbih7YXV0aCxyZXNwb25zZX0pe1xuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIENoZWNrIHJlZnJlc2ggdG9rZW4gYW5kIGdpdmUgYW4gYWNjZXMgdG9rZW5cbiAgICAgICAgICBjb25zdCByZWZyZXNoVG9rZW4gPSBhd2FpdCBhdXRoLnVzZSgnYXBpJykuYXV0aGVudGljYXRlKClcbiAgICAgIFxuICAgICAgICAgIGlmIChyZWZyZXNoVG9rZW4pIHJldHVybiBqd3Quc2lnbih7IGRhdGE6ICdmb29iYXInIH0sICdUT0tFTl9QUklWQVRFX0tFWScsIHsgZXhwaXJlc0luOiAnMzBtJyB9KTtcbiAgICAgICAgXG4gICAgICAgIH1jYXRjaHtcbiAgICAgICAgICByZXR1cm4gcmVzcG9uc2UuYmFkUmVxdWVzdCgnSW52YWxpZCBjcmVkZW50aWFscycpXG4gICAgICAgIH1cbiAgICAgIH1cblxuXG4gICAgcHVibGljIGFzeW5jIGNoZWNrKHtyZXF1ZXN0fSl7XG4gICAgICAgIHJldHVybiBqd3QudmVyaWZ5KHJlcXVlc3QuaW5wdXQoJ2p3dCcpLCAnVE9LRU5fUFJJVkFURV9LRVknKTtcbiAgICB9XG59XG4iXX0=
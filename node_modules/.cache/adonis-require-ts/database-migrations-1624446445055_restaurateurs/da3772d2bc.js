"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Schema_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Lucid/Schema"));
class Restaurateurs extends Schema_1.default {
    constructor() {
        super(...arguments);
        this.tableName = 'restaurateurs';
    }
    async up() {
        this.schema.dropTable(this.tableName);
    }
    async down() {
        this.schema.createTable(this.tableName, (table) => {
            table.increments('restaurateur_id').primary;
            table.string('restaurateur_name').notNullable();
            table.string('restaurateur_lastname').notNullable();
            table.string('restaurateur_password').notNullable();
            table.string('restaurateur_email').notNullable();
            table.string('restaurateur_restaurant_name').notNullable();
            table.string('restaurateur_phone_number').notNullable();
            table.integer('restaurateur_fk_parrain_id').unsigned().references('restaurateur_id').inTable('restaurateurs');
            table.integer('restaurateur_fk_refresh_token_id').unsigned().references('refreshtoken_id').inTable('refreshtokens');
            table.integer('restaurateur_fk_address_id').unsigned().references('address_id').inTable('addresses');
            table.integer('restaurateur_fk_filleul_id').unsigned().references('restaurateur_id').inTable('restaurateurs');
            table.timestamp('created_at', { useTz: true });
            table.timestamp('updated_at', { useTz: true });
        });
    }
}
exports.default = Restaurateurs;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTYyNDQ0NjQ0NTA1NV9yZXN0YXVyYXRldXJzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiMTYyNDQ0NjQ0NTA1NV9yZXN0YXVyYXRldXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsdUZBQWlEO0FBRWpELE1BQXFCLGFBQWMsU0FBUSxnQkFBVTtJQUFyRDs7UUFDWSxjQUFTLEdBQUcsZUFBZSxDQUFBO0lBMkJ2QyxDQUFDO0lBekJRLEtBQUssQ0FBQyxFQUFFO1FBQ2IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFBO0lBQ3ZDLENBQUM7SUFFTSxLQUFLLENBQUMsSUFBSTtRQUNmLElBQUksQ0FBQyxNQUFNLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFBRTtZQUNoRCxLQUFLLENBQUMsVUFBVSxDQUFDLGlCQUFpQixDQUFDLENBQUMsT0FBTyxDQUFBO1lBQzNDLEtBQUssQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQTtZQUMvQyxLQUFLLENBQUMsTUFBTSxDQUFDLHVCQUF1QixDQUFDLENBQUMsV0FBVyxFQUFFLENBQUE7WUFDbkQsS0FBSyxDQUFDLE1BQU0sQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFBO1lBQ25ELEtBQUssQ0FBQyxNQUFNLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQTtZQUNoRCxLQUFLLENBQUMsTUFBTSxDQUFDLDhCQUE4QixDQUFDLENBQUMsV0FBVyxFQUFFLENBQUE7WUFDMUQsS0FBSyxDQUFDLE1BQU0sQ0FBQywyQkFBMkIsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFBO1lBQ3ZELEtBQUssQ0FBQyxPQUFPLENBQUMsNEJBQTRCLENBQUMsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxVQUFVLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUE7WUFDN0csS0FBSyxDQUFDLE9BQU8sQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFDLFFBQVEsRUFBRSxDQUFDLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQTtZQUNuSCxLQUFLLENBQUMsT0FBTyxDQUFDLDRCQUE0QixDQUFDLENBQUMsUUFBUSxFQUFFLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQTtZQUNwRyxLQUFLLENBQUMsT0FBTyxDQUFDLDRCQUE0QixDQUFDLENBQUMsUUFBUSxFQUFFLENBQUMsVUFBVSxDQUFDLGlCQUFpQixDQUFDLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFBO1lBSzdHLEtBQUssQ0FBQyxTQUFTLENBQUMsWUFBWSxFQUFFLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUE7WUFDOUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxZQUFZLEVBQUUsRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQTtRQUNoRCxDQUFDLENBQUMsQ0FBQTtJQUNKLENBQUM7Q0FDRjtBQTVCRCxnQ0E0QkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQmFzZVNjaGVtYSBmcm9tICdAaW9jOkFkb25pcy9MdWNpZC9TY2hlbWEnXG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlc3RhdXJhdGV1cnMgZXh0ZW5kcyBCYXNlU2NoZW1hIHtcbiAgcHJvdGVjdGVkIHRhYmxlTmFtZSA9ICdyZXN0YXVyYXRldXJzJ1xuXG4gIHB1YmxpYyBhc3luYyB1cCAoKSB7XG4gICAgdGhpcy5zY2hlbWEuZHJvcFRhYmxlKHRoaXMudGFibGVOYW1lKVxuICB9XG5cbiAgcHVibGljIGFzeW5jIGRvd24gKCkge1xuICAgIHRoaXMuc2NoZW1hLmNyZWF0ZVRhYmxlKHRoaXMudGFibGVOYW1lLCAodGFibGUpID0+IHtcbiAgICAgIHRhYmxlLmluY3JlbWVudHMoJ3Jlc3RhdXJhdGV1cl9pZCcpLnByaW1hcnlcbiAgICAgIHRhYmxlLnN0cmluZygncmVzdGF1cmF0ZXVyX25hbWUnKS5ub3ROdWxsYWJsZSgpXG4gICAgICB0YWJsZS5zdHJpbmcoJ3Jlc3RhdXJhdGV1cl9sYXN0bmFtZScpLm5vdE51bGxhYmxlKClcbiAgICAgIHRhYmxlLnN0cmluZygncmVzdGF1cmF0ZXVyX3Bhc3N3b3JkJykubm90TnVsbGFibGUoKVxuICAgICAgdGFibGUuc3RyaW5nKCdyZXN0YXVyYXRldXJfZW1haWwnKS5ub3ROdWxsYWJsZSgpXG4gICAgICB0YWJsZS5zdHJpbmcoJ3Jlc3RhdXJhdGV1cl9yZXN0YXVyYW50X25hbWUnKS5ub3ROdWxsYWJsZSgpXG4gICAgICB0YWJsZS5zdHJpbmcoJ3Jlc3RhdXJhdGV1cl9waG9uZV9udW1iZXInKS5ub3ROdWxsYWJsZSgpXG4gICAgICB0YWJsZS5pbnRlZ2VyKCdyZXN0YXVyYXRldXJfZmtfcGFycmFpbl9pZCcpLnVuc2lnbmVkKCkucmVmZXJlbmNlcygncmVzdGF1cmF0ZXVyX2lkJykuaW5UYWJsZSgncmVzdGF1cmF0ZXVycycpXG4gICAgICB0YWJsZS5pbnRlZ2VyKCdyZXN0YXVyYXRldXJfZmtfcmVmcmVzaF90b2tlbl9pZCcpLnVuc2lnbmVkKCkucmVmZXJlbmNlcygncmVmcmVzaHRva2VuX2lkJykuaW5UYWJsZSgncmVmcmVzaHRva2VucycpXG4gICAgICB0YWJsZS5pbnRlZ2VyKCdyZXN0YXVyYXRldXJfZmtfYWRkcmVzc19pZCcpLnVuc2lnbmVkKCkucmVmZXJlbmNlcygnYWRkcmVzc19pZCcpLmluVGFibGUoJ2FkZHJlc3NlcycpXG4gICAgICB0YWJsZS5pbnRlZ2VyKCdyZXN0YXVyYXRldXJfZmtfZmlsbGV1bF9pZCcpLnVuc2lnbmVkKCkucmVmZXJlbmNlcygncmVzdGF1cmF0ZXVyX2lkJykuaW5UYWJsZSgncmVzdGF1cmF0ZXVycycpXG5cbiAgICAgIC8qKlxuICAgICAgICogVXNlcyB0aW1lc3RhbXB0eiBmb3IgUG9zdGdyZVNRTCBhbmQgREFURVRJTUUyIGZvciBNU1NRTFxuICAgICAgICovXG4gICAgICB0YWJsZS50aW1lc3RhbXAoJ2NyZWF0ZWRfYXQnLCB7IHVzZVR6OiB0cnVlIH0pXG4gICAgICB0YWJsZS50aW1lc3RhbXAoJ3VwZGF0ZWRfYXQnLCB7IHVzZVR6OiB0cnVlIH0pXG4gICAgfSlcbiAgfVxufVxuIl19
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const corsConfig = {
    enabled: true,
    origin: true,
    methods: ['GET', 'HEAD', 'POST', 'PUT', 'DELETE'],
    headers: true,
    exposeHeaders: [
        'cache-control',
        'content-language',
        'content-type',
        'expires',
        'last-modified',
        'pragma',
    ],
    credentials: true,
    maxAge: 90,
};
exports.default = corsConfig;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29ycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImNvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFTQSxNQUFNLFVBQVUsR0FBZTtJQWE3QixPQUFPLEVBQUUsSUFBSTtJQXdCYixNQUFNLEVBQUUsSUFBSTtJQVlaLE9BQU8sRUFBRSxDQUFDLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxRQUFRLENBQUM7SUFtQmpELE9BQU8sRUFBRSxJQUFJO0lBc0JiLGFBQWEsRUFBRTtRQUNiLGVBQWU7UUFDZixrQkFBa0I7UUFDbEIsY0FBYztRQUNkLFNBQVM7UUFDVCxlQUFlO1FBQ2YsUUFBUTtLQUNUO0lBYUQsV0FBVyxFQUFFLElBQUk7SUFXakIsTUFBTSxFQUFFLEVBQUU7Q0FDWCxDQUFBO0FBRUQsa0JBQWUsVUFBVSxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvbmZpZyBzb3VyY2U6IGh0dHBzOi8vZ2l0LmlvL0pmZWZDXHJcbiAqXHJcbiAqIEZlZWwgZnJlZSB0byBsZXQgdXMga25vdyB2aWEgUFIsIGlmIHlvdSBmaW5kIHNvbWV0aGluZyBicm9rZW4gaW4gdGhpcyBjb25maWdcclxuICogZmlsZS5cclxuICovXHJcblxyXG5pbXBvcnQgeyBDb3JzQ29uZmlnIH0gZnJvbSAnQGlvYzpBZG9uaXMvQ29yZS9Db3JzJ1xyXG5cclxuY29uc3QgY29yc0NvbmZpZzogQ29yc0NvbmZpZyA9IHtcclxuICAvKlxyXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIHwgRW5hYmxlZFxyXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIHxcclxuICB8IEEgYm9vbGVhbiB0byBlbmFibGUgb3IgZGlzYWJsZSBDT1JTIGludGVncmF0aW9uIGZyb20geW91ciBBZG9uaXNKc1xyXG4gIHwgYXBwbGljYXRpb24uXHJcbiAgfFxyXG4gIHwgU2V0dGluZyB0aGUgdmFsdWUgdG8gYHRydWVgIHdpbGwgZW5hYmxlIHRoZSBDT1JTIGZvciBhbGwgSFRUUCByZXF1ZXN0LiBIb3dldmVyLFxyXG4gIHwgeW91IGNhbiBkZWZpbmUgYSBmdW5jdGlvbiB0byBlbmFibGUvZGlzYWJsZSBpdCBvbiBwZXIgcmVxdWVzdCBiYXNpcyBhcyB3ZWxsLlxyXG4gIHxcclxuICAqL1xyXG4gIGVuYWJsZWQ6IHRydWUsXHJcblxyXG4gIC8vIFlvdSBjYW4gYWxzbyB1c2UgYSBmdW5jdGlvbiB0aGF0IHJldHVybiB0cnVlIG9yIGZhbHNlLlxyXG4gIC8vIGVuYWJsZWQ6IChyZXF1ZXN0KSA9PiByZXF1ZXN0LnVybCgpLnN0YXJ0c1dpdGgoJy9hcGknKVxyXG5cclxuICAvKlxyXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIHwgT3JpZ2luXHJcbiAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgfFxyXG4gIHwgU2V0IGEgbGlzdCBvZiBvcmlnaW5zIHRvIGJlIGFsbG93ZWQgZm9yIGBBY2Nlc3MtQ29udHJvbC1BbGxvdy1PcmlnaW5gLlxyXG4gIHwgVGhlIHZhbHVlIGNhbiBiZSBvbmUgb2YgdGhlIGZvbGxvd2luZzpcclxuICB8XHJcbiAgfCBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVFRQL0hlYWRlcnMvQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luXHJcbiAgfFxyXG4gIHwgQm9vbGVhbiAodHJ1ZSkgICAgLSBBbGxvdyBjdXJyZW50IHJlcXVlc3Qgb3JpZ2luLlxyXG4gIHwgQm9vbGVhbiAoZmFsc2UpICAgLSBEaXNhbGxvdyBhbGwuXHJcbiAgfCBTdHJpbmcgICAgICAgICAgICAtIENvbW1hIHNlcGFyYXRlZCBsaXN0IG9mIGFsbG93ZWQgb3JpZ2lucy5cclxuICB8IEFycmF5ICAgICAgICAgICAgIC0gQW4gYXJyYXkgb2YgYWxsb3dlZCBvcmlnaW5zLlxyXG4gIHwgU3RyaW5nICgqKSAgICAgICAgLSBBIHdpbGRjYXJkICgqKSB0byBhbGxvdyBhbGwgcmVxdWVzdCBvcmlnaW5zLlxyXG4gIHwgRnVuY3Rpb24gICAgICAgICAgLSBSZWNlaXZlcyB0aGUgY3VycmVudCBvcmlnaW4gc3RyaW5nIGFuZCBzaG91bGQgcmV0dXJuXHJcbiAgfCAgICAgICAgICAgICAgICAgICAgIG9uZSBvZiB0aGUgYWJvdmUgdmFsdWVzLlxyXG4gIHxcclxuICAqL1xyXG4gIG9yaWdpbjogdHJ1ZSxcclxuXHJcbiAgLypcclxuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICB8IE1ldGhvZHNcclxuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICB8XHJcbiAgfCBBbiBhcnJheSBvZiBhbGxvd2VkIEhUVFAgbWV0aG9kcyBmb3IgQ09SUy4gVGhlIGBBY2Nlc3MtQ29udHJvbC1SZXF1ZXN0LU1ldGhvZGBcclxuICB8IGlzIGNoZWNrZWQgYWdhaW5zdCB0aGUgZm9sbG93aW5nIGxpc3QuXHJcbiAgfFxyXG4gIHwgRm9sbG93aW5nIGlzIHRoZSBsaXN0IG9mIGRlZmF1bHQgbWV0aG9kcy4gRmVlbCBmcmVlIHRvIGFkZCBtb3JlLlxyXG4gICovXHJcbiAgbWV0aG9kczogWydHRVQnLCAnSEVBRCcsICdQT1NUJywgJ1BVVCcsICdERUxFVEUnXSxcclxuXHJcbiAgLypcclxuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICB8IEhlYWRlcnNcclxuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICB8XHJcbiAgfCBMaXN0IG9mIGhlYWRlcnMgdG8gYmUgYWxsb3dlZCBmb3IgYEFjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnNgIGhlYWRlci5cclxuICB8IFRoZSB2YWx1ZSBjYW4gYmUgb25lIG9mIHRoZSBmb2xsb3dpbmc6XHJcbiAgfFxyXG4gIHwgaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSFRUUC9IZWFkZXJzL0FjY2Vzcy1Db250cm9sLVJlcXVlc3QtSGVhZGVyc1xyXG4gIHxcclxuICB8IEJvb2xlYW4odHJ1ZSkgICAgIC0gQWxsb3cgYWxsIGhlYWRlcnMgbWVudGlvbmVkIGluIGBBY2Nlc3MtQ29udHJvbC1SZXF1ZXN0LUhlYWRlcnNgLlxyXG4gIHwgQm9vbGVhbihmYWxzZSkgICAgLSBEaXNhbGxvdyBhbGwgaGVhZGVycy5cclxuICB8IFN0cmluZyAgICAgICAgICAgIC0gQ29tbWEgc2VwYXJhdGVkIGxpc3Qgb2YgYWxsb3dlZCBoZWFkZXJzLlxyXG4gIHwgQXJyYXkgICAgICAgICAgICAgLSBBbiBhcnJheSBvZiBhbGxvd2VkIGhlYWRlcnMuXHJcbiAgfCBGdW5jdGlvbiAgICAgICAgICAtIFJlY2VpdmVzIHRoZSBjdXJyZW50IGhlYWRlciBhbmQgc2hvdWxkIHJldHVybiBvbmUgb2YgdGhlIGFib3ZlIHZhbHVlcy5cclxuICB8XHJcbiAgKi9cclxuICBoZWFkZXJzOiB0cnVlLFxyXG5cclxuICAvKlxyXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIHwgRXhwb3NlIEhlYWRlcnNcclxuICB8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICB8XHJcbiAgfCBBIGxpc3Qgb2YgaGVhZGVycyB0byBiZSBleHBvc2VkIGJ5IHNldHRpbmcgYEFjY2Vzcy1Db250cm9sLUV4cG9zZS1IZWFkZXJzYC5cclxuICB8IGhlYWRlci4gQnkgZGVmYXVsdCBmb2xsb3dpbmcgNiBzaW1wbGUgcmVzcG9uc2UgaGVhZGVycyBhcmUgZXhwb3NlZC5cclxuICB8XHJcbiAgfCBDYWNoZS1Db250cm9sXHJcbiAgfCBDb250ZW50LUxhbmd1YWdlXHJcbiAgfCBDb250ZW50LVR5cGVcclxuICB8IEV4cGlyZXNcclxuICB8IExhc3QtTW9kaWZpZWRcclxuICB8IFByYWdtYVxyXG4gIHxcclxuICB8IEluIG9yZGVyIHRvIGFkZCBtb3JlIGhlYWRlcnMsIHNpbXBseSBkZWZpbmUgdGhlbSBpbnNpZGUgdGhlIGZvbGxvd2luZyBhcnJheS5cclxuICB8XHJcbiAgfCBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yZy9lbi1VUy9kb2NzL1dlYi9IVFRQL0hlYWRlcnMvQWNjZXNzLUNvbnRyb2wtRXhwb3NlLUhlYWRlcnNcclxuICB8XHJcbiAgKi9cclxuICBleHBvc2VIZWFkZXJzOiBbXHJcbiAgICAnY2FjaGUtY29udHJvbCcsXHJcbiAgICAnY29udGVudC1sYW5ndWFnZScsXHJcbiAgICAnY29udGVudC10eXBlJyxcclxuICAgICdleHBpcmVzJyxcclxuICAgICdsYXN0LW1vZGlmaWVkJyxcclxuICAgICdwcmFnbWEnLFxyXG4gIF0sXHJcblxyXG4gIC8qXHJcbiAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgfCBDcmVkZW50aWFsc1xyXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIHxcclxuICB8IFRvZ2dsZSBgQWNjZXNzLUNvbnRyb2wtQWxsb3ctQ3JlZGVudGlhbHNgIGhlYWRlci4gSWYgdmFsdWUgaXMgc2V0IHRvIGB0cnVlYCxcclxuICB8IHRoZW4gaGVhZGVyIHdpbGwgYmUgc2V0LCBvdGhlcndpc2Ugbm90LlxyXG4gIHxcclxuICB8IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0hUVFAvSGVhZGVycy9BY2Nlc3MtQ29udHJvbC1BbGxvdy1DcmVkZW50aWFsc1xyXG4gIHxcclxuICAqL1xyXG4gIGNyZWRlbnRpYWxzOiB0cnVlLFxyXG5cclxuICAvKlxyXG4gIHwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gIHwgTWF4QWdlXHJcbiAgfC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgfFxyXG4gIHwgRGVmaW5lIGBBY2Nlc3MtQ29udHJvbC1NYXgtQWdlYCBoZWFkZXIgaW4gc2Vjb25kcy5cclxuICB8IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0hUVFAvSGVhZGVycy9BY2Nlc3MtQ29udHJvbC1NYXgtQWdlXHJcbiAgfFxyXG4gICovXHJcbiAgbWF4QWdlOiA5MCxcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29yc0NvbmZpZ1xyXG4iXX0=
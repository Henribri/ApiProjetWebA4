"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const PayMethod_1 = __importDefault(global[Symbol.for('ioc.use')]("App/Models/PayMethod"));
class PayMethodsController {
    async index({ response }) {
        const payMethods = await PayMethod_1.default.query();
        return response.json({ payMethods });
    }
    async getById({ params, response }) {
        const paymethod = await PayMethod_1.default.findOrFail(params.id);
        return response.json({ paymethod });
    }
    async create({ request, response }) {
        const paymethod = await PayMethod_1.default.create({ paymethod_card_type: request.body()['paymethod_card_type'], paymethod_card_number: request.body()['paymethod_card_number'] });
        return response.json({ paymethod });
    }
    async update({ request, response, params }) {
        const paymethod = await PayMethod_1.default.findOrFail(params.id);
        paymethod.merge(request.body());
        await paymethod.save();
        return response.json({ paymethod });
    }
    async delete({ response, params }) {
        const paymethod = await PayMethod_1.default.findOrFail(params.id);
        await paymethod.delete();
        return response.json({ paymethod });
    }
}
exports.default = PayMethodsController;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUGF5TWV0aG9kc0NvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJQYXlNZXRob2RzQ29udHJvbGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUVBLDJGQUE2QztBQUU3QyxNQUFxQixvQkFBb0I7SUFFOUIsS0FBSyxDQUFDLEtBQUssQ0FBRSxFQUFDLFFBQVEsRUFBcUI7UUFDOUMsTUFBTSxVQUFVLEdBQUcsTUFBTSxtQkFBUyxDQUFDLEtBQUssRUFBRSxDQUFBO1FBQzFDLE9BQU8sUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFDLFVBQVUsRUFBQyxDQUFDLENBQUE7SUFDdEMsQ0FBQztJQUVNLEtBQUssQ0FBQyxPQUFPLENBQUUsRUFBQyxNQUFNLEVBQUMsUUFBUSxFQUFxQjtRQUN2RCxNQUFNLFNBQVMsR0FBRyxNQUFNLG1CQUFTLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUV4RCxPQUFPLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBQyxTQUFTLEVBQUMsQ0FBQyxDQUFBO0lBQ3JDLENBQUM7SUFFTSxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUUsT0FBTyxFQUFHLFFBQVEsRUFBc0I7UUFDMUQsTUFBTSxTQUFTLEdBQUcsTUFBTSxtQkFBUyxDQUFDLE1BQU0sQ0FBQyxFQUFDLG1CQUFtQixFQUFFLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxxQkFBcUIsQ0FBQyxFQUFFLHFCQUFxQixFQUFHLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUN6SyxPQUFPLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBQyxTQUFTLEVBQUMsQ0FBQyxDQUFBO0lBQ3JDLENBQUM7SUFFTSxLQUFLLENBQUMsTUFBTSxDQUFFLEVBQUMsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQXFCO1FBQ2hFLE1BQU0sU0FBUyxHQUFHLE1BQU0sbUJBQVMsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3hELFNBQVMsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7UUFDaEMsTUFBTSxTQUFTLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDdkIsT0FBTyxRQUFRLENBQUMsSUFBSSxDQUFDLEVBQUMsU0FBUyxFQUFDLENBQUMsQ0FBQTtJQUNyQyxDQUFDO0lBRU0sS0FBSyxDQUFDLE1BQU0sQ0FBQyxFQUFDLFFBQVEsRUFBRSxNQUFNLEVBQXFCO1FBQ3RELE1BQU0sU0FBUyxHQUFHLE1BQU0sbUJBQVMsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQ3hELE1BQU0sU0FBUyxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBRXpCLE9BQU8sUUFBUSxDQUFDLElBQUksQ0FBQyxFQUFDLFNBQVMsRUFBQyxDQUFDLENBQUE7SUFDckMsQ0FBQztDQUVKO0FBaENELHVDQWdDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBDb250ZXh0Q29udHJhY3QgfSBmcm9tICdAaW9jOkFkb25pcy9Db3JlL0h0dHBDb250ZXh0J1xuXG5pbXBvcnQgUGF5TWV0aG9kIGZyb20gJ0FwcC9Nb2RlbHMvUGF5TWV0aG9kJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGF5TWV0aG9kc0NvbnRyb2xsZXIge1xuXG4gICAgcHVibGljIGFzeW5jIGluZGV4ICh7cmVzcG9uc2V9Okh0dHBDb250ZXh0Q29udHJhY3Qpe1xuICAgICAgICBjb25zdCBwYXlNZXRob2RzID0gYXdhaXQgUGF5TWV0aG9kLnF1ZXJ5KClcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oe3BheU1ldGhvZHN9KVxuICAgIH1cblxuICAgIHB1YmxpYyBhc3luYyBnZXRCeUlkICh7cGFyYW1zLHJlc3BvbnNlfTpIdHRwQ29udGV4dENvbnRyYWN0KXtcbiAgICAgICAgY29uc3QgcGF5bWV0aG9kID0gYXdhaXQgUGF5TWV0aG9kLmZpbmRPckZhaWwocGFyYW1zLmlkKTtcblxuICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbih7cGF5bWV0aG9kfSlcbiAgICB9XG5cbiAgICBwdWJsaWMgYXN5bmMgY3JlYXRlKHsgcmVxdWVzdCAsIHJlc3BvbnNlIH06SHR0cENvbnRleHRDb250cmFjdCl7XG4gICAgICAgIGNvbnN0IHBheW1ldGhvZCA9IGF3YWl0IFBheU1ldGhvZC5jcmVhdGUoe3BheW1ldGhvZF9jYXJkX3R5cGU6IHJlcXVlc3QuYm9keSgpWydwYXltZXRob2RfY2FyZF90eXBlJ10sIHBheW1ldGhvZF9jYXJkX251bWJlciA6IHJlcXVlc3QuYm9keSgpWydwYXltZXRob2RfY2FyZF9udW1iZXInXSB9KTtcbiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oe3BheW1ldGhvZH0pXG4gICAgfVxuXG4gICAgcHVibGljIGFzeW5jIHVwZGF0ZSAoe3JlcXVlc3QsIHJlc3BvbnNlLCBwYXJhbXN9Okh0dHBDb250ZXh0Q29udHJhY3Qpe1xuICAgICAgICBjb25zdCBwYXltZXRob2QgPSBhd2FpdCBQYXlNZXRob2QuZmluZE9yRmFpbChwYXJhbXMuaWQpO1xuICAgICAgICBwYXltZXRob2QubWVyZ2UocmVxdWVzdC5ib2R5KCkpO1xuICAgICAgICBhd2FpdCBwYXltZXRob2Quc2F2ZSgpO1xuICAgICAgICByZXR1cm4gcmVzcG9uc2UuanNvbih7cGF5bWV0aG9kfSlcbiAgICB9XG5cbiAgICBwdWJsaWMgYXN5bmMgZGVsZXRlKHtyZXNwb25zZSwgcGFyYW1zfTpIdHRwQ29udGV4dENvbnRyYWN0KXtcbiAgICAgICAgY29uc3QgcGF5bWV0aG9kID0gYXdhaXQgUGF5TWV0aG9kLmZpbmRPckZhaWwocGFyYW1zLmlkKTtcbiAgICAgICAgYXdhaXQgcGF5bWV0aG9kLmRlbGV0ZSgpO1xuXG4gICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKHtwYXltZXRob2R9KVxuICAgIH1cblxufVxuIl19
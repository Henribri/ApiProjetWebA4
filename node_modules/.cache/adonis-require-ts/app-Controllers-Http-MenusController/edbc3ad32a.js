"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Menu_1 = __importDefault(global[Symbol.for('ioc.use')]("App/Models/Menu"));
class MenusController {
    async getOneMenu({ request, response }) {
        try {
            return await Menu_1.default.findOne({ _id: request.input('menu_id') });
        }
        catch (err) {
            return response.status(502);
        }
    }
    async getAllMenus({ response }) {
        try {
            return await Menu_1.default.find();
        }
        catch (err) {
            return response.status(502);
        }
    }
    async getMenusByRestorer({ request, response }) {
        try {
            return await Menu_1.default.find({ restorer: request.input("restorer_id") });
        }
        catch (err) {
            return response.status(502);
        }
    }
    async createMenu({ request, response }) {
        try {
            await Menu_1.default.create(request.body());
            return response.ok("Menu created");
        }
        catch (err) {
            return response.status(502);
        }
    }
    async editMenu({ request, response }) {
        try {
            await Menu_1.default.updateOne({ _id: request.input("menu_id") }, request.body());
            return response.ok("Menu edited");
        }
        catch (err) {
            return response.status(502);
        }
    }
    async deleteMenu({ request, response }) {
        try {
            await Menu_1.default.deleteOne({ _id: request.input("menu_id") });
            return response.ok("Menu deleted");
        }
        catch (err) {
            return response.status(502);
        }
    }
}
exports.default = MenusController;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWVudXNDb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiTWVudXNDb250cm9sbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBRUEsaUZBQW1DO0FBRW5DLE1BQXFCLGVBQWU7SUFFekIsS0FBSyxDQUFDLFVBQVUsQ0FBRSxFQUFDLE9BQU8sRUFBRSxRQUFRLEVBQXFCO1FBQzVELElBQUk7WUFDQSxPQUFPLE1BQU0sY0FBSSxDQUFDLE9BQU8sQ0FBQyxFQUFDLEdBQUcsRUFBQyxPQUFPLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxFQUFDLENBQUMsQ0FBQTtTQUM1RDtRQUFBLE9BQU0sR0FBRyxFQUFDO1lBQ1AsT0FBTyxRQUFRLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFBO1NBQzlCO0lBQ0wsQ0FBQztJQUVNLEtBQUssQ0FBQyxXQUFXLENBQUUsRUFBQyxRQUFRLEVBQXNCO1FBQ3JELElBQUc7WUFDQyxPQUFPLE1BQU0sY0FBSSxDQUFDLElBQUksRUFBRSxDQUFBO1NBQzNCO1FBQUEsT0FBTSxHQUFHLEVBQUM7WUFDUCxPQUFPLFFBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUE7U0FDOUI7SUFDTCxDQUFDO0lBRU0sS0FBSyxDQUFDLGtCQUFrQixDQUFFLEVBQUMsT0FBTyxFQUFFLFFBQVEsRUFBcUI7UUFDcEUsSUFBRztZQUNDLE9BQU8sTUFBTSxjQUFJLENBQUMsSUFBSSxDQUFDLEVBQUMsUUFBUSxFQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLEVBQUMsQ0FBQyxDQUFBO1NBQ2xFO1FBQUEsT0FBTSxHQUFHLEVBQUM7WUFDUCxPQUFPLFFBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUE7U0FDOUI7SUFDTCxDQUFDO0lBRU0sS0FBSyxDQUFDLFVBQVUsQ0FBRSxFQUFDLE9BQU8sRUFBRSxRQUFRLEVBQUM7UUFDeEMsSUFBRztZQUNDLE1BQU0sY0FBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQTtZQUNqQyxPQUFPLFFBQVEsQ0FBQyxFQUFFLENBQUMsY0FBYyxDQUFDLENBQUE7U0FDckM7UUFBQSxPQUFNLEdBQUcsRUFBQztZQUNQLE9BQU8sUUFBUSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQTtTQUM5QjtJQUNMLENBQUM7SUFFTSxLQUFLLENBQUMsUUFBUSxDQUFFLEVBQUMsT0FBTyxFQUFFLFFBQVEsRUFBcUI7UUFDMUQsSUFBRztZQUNDLE1BQU0sY0FBSSxDQUFDLFNBQVMsQ0FBQyxFQUFDLEdBQUcsRUFBQyxPQUFPLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxFQUFDLEVBQUUsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDLENBQUE7WUFDcEUsT0FBTyxRQUFRLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFBO1NBQ3BDO1FBQUEsT0FBTSxHQUFHLEVBQUM7WUFDUCxPQUFPLFFBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUE7U0FDOUI7SUFDTCxDQUFDO0lBRU0sS0FBSyxDQUFDLFVBQVUsQ0FBRSxFQUFDLE9BQU8sRUFBRSxRQUFRLEVBQXFCO1FBQzVELElBQUc7WUFDQyxNQUFNLGNBQUksQ0FBQyxTQUFTLENBQUMsRUFBQyxHQUFHLEVBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsRUFBQyxDQUFDLENBQUE7WUFDcEQsT0FBTyxRQUFRLENBQUMsRUFBRSxDQUFDLGNBQWMsQ0FBQyxDQUFBO1NBQ3JDO1FBQUEsT0FBTSxHQUFHLEVBQUM7WUFDUCxPQUFPLFFBQVEsQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUE7U0FDOUI7SUFDTCxDQUFDO0NBRUo7QUFyREQsa0NBcURDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSHR0cENvbnRleHRDb250cmFjdCB9IGZyb20gJ0Bpb2M6QWRvbmlzL0NvcmUvSHR0cENvbnRleHQnXHJcblxyXG5pbXBvcnQgTWVudSBmcm9tIFwiQXBwL01vZGVscy9NZW51XCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNZW51c0NvbnRyb2xsZXIge1xyXG5cclxuICAgIHB1YmxpYyBhc3luYyBnZXRPbmVNZW51ICh7cmVxdWVzdCwgcmVzcG9uc2V9Okh0dHBDb250ZXh0Q29udHJhY3Qpe1xyXG4gICAgICAgIHRyeSB7ICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCBNZW51LmZpbmRPbmUoe19pZDpyZXF1ZXN0LmlucHV0KCdtZW51X2lkJyl9KVxyXG4gICAgICAgIH1jYXRjaChlcnIpe1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2Uuc3RhdHVzKDUwMilcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFzeW5jIGdldEFsbE1lbnVzICh7cmVzcG9uc2V9OiBIdHRwQ29udGV4dENvbnRyYWN0KXtcclxuICAgICAgICB0cnl7XHJcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCBNZW51LmZpbmQoKVxyXG4gICAgICAgIH1jYXRjaChlcnIpe1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2Uuc3RhdHVzKDUwMilcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFzeW5jIGdldE1lbnVzQnlSZXN0b3JlciAoe3JlcXVlc3QsIHJlc3BvbnNlfTpIdHRwQ29udGV4dENvbnRyYWN0KXtcclxuICAgICAgICB0cnl7XHJcbiAgICAgICAgICAgIHJldHVybiBhd2FpdCBNZW51LmZpbmQoe3Jlc3RvcmVyOnJlcXVlc3QuaW5wdXQoXCJyZXN0b3Jlcl9pZFwiKX0pXHJcbiAgICAgICAgfWNhdGNoKGVycil7XHJcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5zdGF0dXMoNTAyKVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYXN5bmMgY3JlYXRlTWVudSAoe3JlcXVlc3QsIHJlc3BvbnNlfSl7XHJcbiAgICAgICAgdHJ5e1xyXG4gICAgICAgICAgICBhd2FpdCBNZW51LmNyZWF0ZShyZXF1ZXN0LmJvZHkoKSkgICAgICAgICAgICBcclxuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLm9rKFwiTWVudSBjcmVhdGVkXCIpXHJcbiAgICAgICAgfWNhdGNoKGVycil7XHJcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5zdGF0dXMoNTAyKVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYXN5bmMgZWRpdE1lbnUgKHtyZXF1ZXN0LCByZXNwb25zZX06SHR0cENvbnRleHRDb250cmFjdCl7XHJcbiAgICAgICAgdHJ5e1xyXG4gICAgICAgICAgICBhd2FpdCBNZW51LnVwZGF0ZU9uZSh7X2lkOnJlcXVlc3QuaW5wdXQoXCJtZW51X2lkXCIpfSwgcmVxdWVzdC5ib2R5KCkpXHJcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5vayhcIk1lbnUgZWRpdGVkXCIpXHJcbiAgICAgICAgfWNhdGNoKGVycil7XHJcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5zdGF0dXMoNTAyKVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgYXN5bmMgZGVsZXRlTWVudSAoe3JlcXVlc3QsIHJlc3BvbnNlfTpIdHRwQ29udGV4dENvbnRyYWN0KXtcclxuICAgICAgICB0cnl7XHJcbiAgICAgICAgICAgIGF3YWl0IE1lbnUuZGVsZXRlT25lKHtfaWQ6cmVxdWVzdC5pbnB1dChcIm1lbnVfaWRcIil9KVxyXG4gICAgICAgICAgICByZXR1cm4gcmVzcG9uc2Uub2soXCJNZW51IGRlbGV0ZWRcIilcclxuICAgICAgICB9Y2F0Y2goZXJyKXtcclxuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLnN0YXR1cyg1MDIpXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxufVxyXG4iXX0=
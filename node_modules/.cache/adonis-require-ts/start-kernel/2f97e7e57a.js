"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Server_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Core/Server"));
Server_1.default.middleware.register([
    () => Promise.resolve().then(() => __importStar(global[Symbol.for('ioc.use')]("Adonis/Core/BodyParser"))),
]);
Server_1.default.middleware.registerNamed({});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2VybmVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsia2VybmVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQVdBLHNGQUE0QztBQVc1QyxnQkFBTSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUM7SUFDekIsR0FBRyxFQUFFLG9HQUFzQztDQUc1QyxDQUFDLENBQUE7QUFrQkYsZ0JBQU0sQ0FBQyxVQUFVLENBQUMsYUFBYSxDQUFDLEVBQy9CLENBQUMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG58IEFwcGxpY2F0aW9uIG1pZGRsZXdhcmVcclxufC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbnxcclxufCBUaGlzIGZpbGUgaXMgdXNlZCB0byBkZWZpbmUgbWlkZGxld2FyZSBmb3IgSFRUUCByZXF1ZXN0cy4gWW91IGNhbiByZWdpc3RlclxyXG58IG1pZGRsZXdhcmUgYXMgYSBgY2xvc3VyZWAgb3IgYW4gSW9DIGNvbnRhaW5lciBiaW5kaW5nLiBUaGUgYmluZGluZ3MgYXJlXHJcbnwgcHJlZmVycmVkLCBzaW5jZSB0aGV5IGtlZXAgdGhpcyBmaWxlIGNsZWFuLlxyXG58XHJcbiovXHJcblxyXG5pbXBvcnQgU2VydmVyIGZyb20gJ0Bpb2M6QWRvbmlzL0NvcmUvU2VydmVyJ1xyXG5cclxuLypcclxufC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbnwgR2xvYmFsIG1pZGRsZXdhcmVcclxufC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbnxcclxufCBBbiBhcnJheSBvZiBnbG9iYWwgbWlkZGxld2FyZSwgdGhhdCB3aWxsIGJlIGV4ZWN1dGVkIGluIHRoZSBvcmRlciB0aGV5XHJcbnwgYXJlIGRlZmluZWQgZm9yIGV2ZXJ5IEhUVFAgcmVxdWVzdHMuXHJcbnxcclxuKi9cclxuU2VydmVyLm1pZGRsZXdhcmUucmVnaXN0ZXIoW1xyXG4gICgpID0+IGltcG9ydCgnQGlvYzpBZG9uaXMvQ29yZS9Cb2R5UGFyc2VyJyksXHJcbiAgLy8oKSA9PiBpbXBvcnQoJ0FwcC9NaWRkbGV3YXJlL0NoZWNrSnd0JyksXHJcblxyXG5dKVxyXG5cclxuLypcclxufC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbnwgTmFtZWQgbWlkZGxld2FyZVxyXG58LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxufFxyXG58IE5hbWVkIG1pZGRsZXdhcmUgYXJlIGRlZmluZWQgYXMga2V5LXZhbHVlIHBhaXIuIFRoZSB2YWx1ZSBpcyB0aGUgbmFtZXNwYWNlXHJcbnwgb3IgbWlkZGxld2FyZSBmdW5jdGlvbiBhbmQga2V5IGlzIHRoZSBhbGlhcy4gTGF0ZXIgeW91IGNhbiB1c2UgdGhlc2VcclxufCBhbGlhcyBvbiBpbmRpdmlkdWFsIHJvdXRlcy4gRm9yIGV4YW1wbGU6XHJcbnxcclxufCB7IGF1dGg6ICgpID0+IGltcG9ydCgnQXBwL01pZGRsZXdhcmUvQXV0aCcpIH1cclxufFxyXG58IGFuZCB0aGVuIHVzZSBpdCBhcyBmb2xsb3dzXHJcbnxcclxufCBSb3V0ZS5nZXQoJ2Rhc2hib2FyZCcsICdVc2VyQ29udHJvbGxlci5kYXNoYm9hcmQnKS5taWRkbGV3YXJlKCdhdXRoJylcclxufFxyXG4qL1xyXG5TZXJ2ZXIubWlkZGxld2FyZS5yZWdpc3Rlck5hbWVkKHtcclxufSlcclxuIl19